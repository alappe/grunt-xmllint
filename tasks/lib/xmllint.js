// Generated by CoffeeScript 1.7.1

/*
grunt-xmllint

Copyright (c) 2014 Andreas Lappe
http://zimmer7.com
Licensed under the BSD license.
 */

(function() {
  var exec, path;

  path = require('path');

  exec = (require('child_process')).exec;

  exports.init = function(grunt) {
    var buildCommand, cmd, config, defaults, done, exports;
    exports = config = {};
    cmd = done = null;
    defaults = {
      bin: 'xmllint',
      suffixes: ['xml'],
      verbose: false,
      maxBuffer: 200 * 1024
    };
    buildCommand = function(dir) {
      var linuxFlag, suffix, suffixes;
      suffixes = (function() {
        var _i, _len, _ref, _results;
        _ref = config.suffixes;
        _results = [];
        for (_i = 0, _len = _ref.length; _i < _len; _i++) {
          suffix = _ref[_i];
          _results.push("-name *." + suffix);
        }
        return _results;
      })();
      linuxFlag = process.platform === 'linux' ? '-r ' : '';
      cmd = "find " + dir;
      cmd += " " + (suffixes.join(' -o '));
      cmd += " -print0";
      cmd += " | xargs " + linuxFlag + "-0 -n 1 " + (path.normalize(config.bin));
      if (!config.verbose) {
        cmd += " > /dev/null";
      }
      console.log("command " + cmd);
      return cmd;
    };
    exports.setup = function(runner) {
      var dir;
      dir = path.normalize(runner.data.dir);
      config = runner.options(defaults);
      cmd = buildCommand(dir);
      grunt.log.writeln("Starting xmllint (target: " + runner.target.cyan + ") in " + dir.cyan);
      grunt.verbose.writeln("Execute: " + cmd);
      return done = runner.async();
    };
    exports.run = function() {
      var cmdOptions;
      cmdOptions = {
        maxBuffer: config.maxBuffer
      };
      return exec(cmd, cmdOptions, function(err, stdout, stderr) {
        if (stdout) {
          grunt.log.write(stdout);
        }
        if (err && err.code !== 0) {
          grunt.fatal(stderr);
        }
        return done();
      });
    };
    return exports;
  };

}).call(this);
